name: CodeClimate Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  codeclimate:
    name: Run CodeClimate Analysis
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      # 3. Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # 4. Build project
      - name: Build project
        run: dotnet build --no-restore

      # 5. Install CodeClimate Test Reporter
      - name: Install CodeClimate Test Reporter
        run: |
          echo "Downloading CodeClimate Test Reporter..."
          curl -L --fail -o cc-test-reporter https://codeclimate.com/downloads/test-reporter/test-reporter-0.11.1-linux-amd64
          chmod +x cc-test-reporter
          sudo mv cc-test-reporter /usr/local/bin/cc-test-reporter
          echo "Verifying CodeClimate Test Reporter..."
          /usr/local/bin/cc-test-reporter --version


      # 6. Run tests and generate coverage report
      - name: Run tests and generate coverage
        run: |
          dotnet test --collect:"XPlat Code Coverage" --no-build
          mv $(find . -name "coverage.cobertura.xml") coverage.cobertura.xml || echo "Coverage file not found"

      # 7. Upload coverage report to CodeClimate
      - name: Upload Coverage Report to CodeClimate
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          echo "Uploading coverage report to CodeClimate..."
          cc-test-reporter format-coverage coverage.cobertura.xml --input-type cobertura
          cc-test-reporter upload-coverage

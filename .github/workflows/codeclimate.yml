name: CodeClimate Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  codeclimate:
    name: Run CodeClimate Analysis
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Install CodeClimate CLI
      - name: Install CodeClimate CLI
        run: |
          echo "Downloading CodeClimate CLI..."
          curl -L -o codeclimate-test-reporter https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
          chmod +x codeclimate-test-reporter
          ls -lh codeclimate-test-reporter
          file codeclimate-test-reporter
          sudo mv codeclimate-test-reporter /usr/local/bin/codeclimate-test-reporter
          echo "CLI installed successfully!"

      # 3. Verify CodeClimate CLI
      - name: Verify CodeClimate CLI
        run: |
          echo "Checking CLI version..."
          codeclimate-test-reporter --version

      # 4. Setup .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x' # Thay phiên bản .NET phù hợp với dự án

      # 5. Restore NuGet dependencies
      - name: Restore dependencies
        run: dotnet restore

      # 6. Build project
      - name: Build project
        run: dotnet build --no-restore

      # 7. Run tests and generate coverage
      - name: Run CodeClimate Test Coverage
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          echo "Running CodeClimate before-build..."
          codeclimate-test-reporter before-build
          echo "Running tests and generating coverage..."
          dotnet test --collect:"XPlat Code Coverage" --no-build || echo "dotnet test failed!"
          echo "Uploading coverage report to CodeClimate..."
          codeclimate-test-reporter after-build --exit-code $?

      # 8. Upload Coverage Report (optional for debugging)
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-results
          path: '**/coverage.cobertura.xml'
